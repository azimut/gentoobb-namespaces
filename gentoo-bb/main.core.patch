diff --git a/lib/bob-core/Dockerfile.template b/lib/bob-core/Dockerfile.template
index 3e56fdb..51309dc 100644
--- a/lib/bob-core/Dockerfile.template
+++ b/lib/bob-core/Dockerfile.template
@@ -1,6 +1,8 @@
 FROM ${BOB_CURRENT_STAGE3_ID}
 LABEL maintainer ${MAINTAINER}
 
+ADD qemu-arm-static /usr/bin/qemu-arm-static
+
 RUN set -x && \
     echo 'GENTOO_MIRRORS="http://distfiles.gentoo.org/"' >> /etc/portage/make.conf && \
     mkdir -p /etc/portage/repos.conf /usr/portage && \
diff --git a/lib/bob-core/build-root.sh b/lib/bob-core/build-root.sh
index 9705d43..478828b 100755
--- a/lib/bob-core/build-root.sh
+++ b/lib/bob-core/build-root.sh
@@ -29,12 +29,12 @@ _image_id="${_image##*/}"
 # Copy libgcc/libstdc++ libs
 function copy_gcc_libs() {
     local lib_gcc lib_stdc lib
-    mkdir -p "${_EMERGE_ROOT}/lib64"
+    mkdir -p "${_EMERGE_ROOT}/lib"
     lib_gcc="$(find /usr/lib/ -name libgcc_s.so.1)"
     lib_stdc="$(find /usr/lib/ -name libstdc++.so.6)"
 
     for lib in "${lib_gcc}" "${lib_stdc}"; do
-        cp "${lib}" "${_EMERGE_ROOT}"/lib64/
+        cp "${lib}" "${_EMERGE_ROOT}"/lib/
     done
 }
 
@@ -438,8 +438,8 @@ if [ -n "${_packages}" ]; then
         find "${_EMERGE_ROOT}/usr/include" -type f -name '*.h' | \
             tar -cpf "${_ROOTFS_BACKUP}/${_image_ns}_${_image_id}-headers.tar" --files-from -
     fi
-    if [[ -d "${_EMERGE_ROOT}/usr/lib64" ]]; then
-        find "${_EMERGE_ROOT}/usr/lib64" -type f -name '*.a' | \
+    if [[ -d "${_EMERGE_ROOT}/usr/lib" ]]; then
+        find "${_EMERGE_ROOT}/usr/lib" -type f -name '*.a' | \
             tar -cpf "${_ROOTFS_BACKUP}/${_image_ns}_${_image_id}-static_libs.tar" --files-from -
     fi
 
@@ -470,7 +470,7 @@ fi
 
 # clean up
 if [ -z "${BOB_SKIP_LIB_CLEANUP}" ]; then
-    for lib_dir in "${_EMERGE_ROOT}"/{lib64,usr/lib64}; do
+    for lib_dir in "${_EMERGE_ROOT}"/{lib,usr/lib}; do
         [[ -d "${lib_dir}" ]] && find "${lib_dir}" -type f \( -name '*.[co]' -o -name '*.prl' \) -delete
     done
 fi
@@ -478,9 +478,9 @@ fi
 rm -rf \
     "${_EMERGE_ROOT}"/etc/ld.so.cache \
     "${_EMERGE_ROOT}"/usr/bin/*-config \
-    "${_EMERGE_ROOT}"/usr/lib64/cmake/ \
-    "${_EMERGE_ROOT}"/usr/lib64/pkgconfig/ \
-    "${_EMERGE_ROOT}"/usr/lib64/qt*/mkspecs/ \
+    "${_EMERGE_ROOT}"/usr/lib/cmake/ \
+    "${_EMERGE_ROOT}"/usr/lib/pkgconfig/ \
+    "${_EMERGE_ROOT}"/usr/lib/qt*/mkspecs/ \
     "${_EMERGE_ROOT}"/usr/share/aclocal/ \
     "${_EMERGE_ROOT}"/usr/share/gettext/ \
     "${_EMERGE_ROOT}"/usr/share/gir-[0-9]*/ \
@@ -497,7 +497,7 @@ if [[ -z "${_keep_headers}" ]]; then
     rm -rf "${_EMERGE_ROOT}"/usr/include/*
 fi
 
-for lib_dir in "${_EMERGE_ROOT}"/{lib64,usr/lib64}; do
+for lib_dir in "${_EMERGE_ROOT}"/{lib,usr/lib}; do
     if [[ -z "${_keep_static_libs}" ]] && [[ -d "${lib_dir}" ]] && [[ "$(ls -A "${lib_dir}")" ]]; then
         find "${lib_dir}"/* -type f -name "*.a" -delete
     fi
diff --git a/lib/engine/docker.sh b/lib/engine/docker.sh
index cf357eb..cbf2909 100644
--- a/lib/engine/docker.sh
+++ b/lib/engine/docker.sh
@@ -263,6 +263,7 @@ function run_image() {
     [[ ! -z "${container_name}" ]] && docker_args+=("--name" "${container_name//\//-}")
     [[ "${BUILD_PRIVILEGED}" == "true" ]] && docker_args+=("--privileged")
     [[ "${_container_mount_portage}" == "true" ]] && docker_args+=("--volumes-from" "${_PORTAGE_IMAGE//\//-}")
+    #[[ "${_container_mount_portage}" == "true" ]] && docker_args+=("--volumes-from" "${_PORTAGE_IMAGE}")
     # gogo
     "${DOCKER}" run "${docker_args[@]}" "${docker_mounts[@]}" "${docker_env[@]}" "${image_id}" "${_container_cmd[@]}" ||
         die "Error, failed to run image ${image_id}"
@@ -336,7 +337,7 @@ function build_core() {
     mkdir -p "${__expand_image_id}"
 
     # copy build-root.sh and emerge defaults so we can access it via dockerfile context
-    cp -r "${_script_dir}"/lib/bob-core/{*.sh,etc,Dockerfile.template} "${__expand_image_id}/"
+    cp -r "${_script_dir}"/lib/bob-core/* "${__expand_image_id}/"
 
     generate_dockerfile "${__expand_image_id}"
     build_image "${builder_id}-core" "${_BUILDER_PATH}"
